from generate_sphere import del_points_sphere, generate_sphere
from utils import generate_cube
from utils import write_file

def cube_remove(x,y,z,w,l,h, filename_filled):
    with open(filename_filled, "r+") as rf:
            
        points = rf.readlines()
        points_list = []
        for coords in points:
            coord = coords.split(" ") 
            points_list.append(coord)

        index = len(points_list) - 1
        while index >= 0:
            del points_list[index][3]
            index -= 1
        
        index = len(points_list) - 1
        while index >= 0:      #Checks whether points are in cube  
            within_x = abs(float(points_list[index][0]) - x) <= w/2
            within_y = abs(float(points_list[index][1]) - y) <= l/2
            within_z = abs(float(points_list[index][2]) - z) <= h/2
            if within_x and within_y and within_z:
                del points_list[index]
            index -= 1
    return points_list           

filled_cube = generate_cube(0,0,0,5,5,5,10000,True)
write_file("output.xyz", filled_cube, True)
removed_points = cube_remove(0,0,0,5,2,2,"output.xyz")
write_file("output.xyz", removed_points, True)
removed_points = cube_remove(0,0,0,2,5,2,"output.xyz")
write_file("output.xyz", removed_points, True)
removed_points = cube_remove(0,0,0,2,2,5,"output.xyz")
write_file("output.xyz", removed_points, True)
hollow= del_points_sphere(0,0,0,2.5, "output.xyz")
write_file("output.xyz", hollow, True)
s_1 = generate_sphere(4.5,0,0,2,1000,True,"cube")
write_file("output.xyz", s_1, False)
s_2 = generate_sphere(-4.5,0,0,2,1000,True,"cube")
write_file("output.xyz", s_2, False)
s_3 = generate_sphere(0,0,4.5,2,1000,True,"cube")
write_file("output.xyz", s_3, False)
s_4 = generate_sphere(0,0,-4.5,2,1000,True,"cube")
write_file("output.xyz", s_4, False)
smaller_cube= generate_cube(0,0,0,1,1,1,10000, True)
write_file("output.xyz", smaller_cube, False)